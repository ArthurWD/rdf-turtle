{"name":"rdf-turtle","tagline":"Turtle reader/writer for Ruby","google":"","note":"Don't delete this file! It's used internally to help with page regeneration.","body":"# RDF::Turtle reader/writer [![Build Status](https://secure.travis-ci.org/ruby-rdf/rdf-turtle.png?branch=master)](http://travis-ci.org/ruby-rdf/rdf-turtle)\r\n[Turtle][] reader/writer for [RDF.rb][RDF.rb] .\r\n\r\n## Description\r\nThis is a [Ruby][] implementation of a [Turtle][] parser for [RDF.rb][].\r\n\r\n## Features\r\nRDF::Turtle parses [Turtle][Turtle] and [N-Triples][N-Triples] into statements or triples. It also serializes to Turtle.\r\n\r\nInstall with `gem install rdf-turtle`\r\n\r\n* 100% free and unencumbered [public domain](http://unlicense.org/) software.\r\n* Implements a complete parser for [Turtle][].\r\n* Compatible with Ruby 1.8.7+, Ruby 1.9.x, and JRuby 1.4/1.5.\r\n\r\n## Usage\r\nInstantiate a reader from a local file:\r\n\r\n    graph = RDF::Graph.load(\"etc/doap.ttl\", :format => :ttl)\r\n\r\nDefine `@base` and `@prefix` definitions, and use for serialization using `:base_uri` an `:prefixes` options.\r\n\r\nCanonicalize and validate using `:canonicalize` and `:validate` options.\r\n\r\nWrite a graph to a file:\r\n\r\n    RDF::Turtle::Writer.open(\"etc/test.ttl\") do |writer|\r\n       writer << graph\r\n    end\r\n\r\n## Documentation\r\nFull documentation available on [Rubydoc.info][Turtle doc]\r\n\r\n### Principle Classes\r\n* {RDF::Turtle::Format}\r\n  * {RDF::Turtle::TTL}\r\n    Asserts :ttl format, text/turtle mime-type and .ttl file extension.\r\n* {RDF::Turtle::Reader}\r\n* {RDF::Turtle::Writer}\r\n\r\n### Variations from the spec\r\nIn some cases, the specification is unclear on certain issues:\r\n\r\n* In section 2.1, the [spec][Turtle] indicates that \"Literals ,\r\n  prefixed names and IRIs may also contain escapes to encode surrounding syntax ...\",\r\n  however the description in 5.2 indicates that only IRI\\_REF and the various STRING\\_LITERAL terms\r\n  are subject to unescaping. This means that an IRI which might otherwise be representable using a PNAME\r\n  cannot if the IRI contains any characters that might need escaping. This implementation currently abides\r\n  by this restriction. Presumably, this would affect both PNAME\\_NS and PNAME\\_LN terminals.\r\n  (This is being tracked as issues [67](http://www.w3.org/2011/rdf-wg/track/issues/67)).\r\n* The EBNF definition of IRIREF seems malformed, and has no provision for \\^, as discussed elsewhere in the spec.\r\n  We presume that [#0000- ] is intended to be [#0000-#0020].\r\n* The list example in section 6 uses a list on it's own, without a predicate or object, which is not allowed\r\n  by the grammar (neither is a blankNodeProperyList). Either the EBNF should be updated to allow for these\r\n  forms, or the examples should be changed such that ( ... ) and [ ... ] are used only in the context of being\r\n  a subject or object. This implementation will generate triples, however an error will be generated if the\r\n  parser is run in validation mode.\r\n* For the time being, plain literals are generated without an xsd:string datatype, but literals with an xsd:string\r\n  datatype are saved as non-datatyped triples in the graph. This will be updated in the future when the rest of the\r\n  library suite is brought up to date.\r\n\r\n## Implementation Notes\r\nThe reader uses a generic LL1 parser {RDF::LL1::Parser} and lexer {RDF::LL1::Lexer}. The parser takes branch and follow\r\ntables generated from the original [Turtle EBNF Grammar][Turtle EBNF] described in the [specification][Turtle]. Branch and Follow tables are specified in {RDF::Turtle::Meta}, which is in turn\r\ngenerated using etc/gramLL1.\r\n\r\nThe branch rules indicate productions to be taken based on a current production. Terminals are denoted\r\nthrough a set of regular expressions used to match each type of terminal, described in {RDF::Turtle::Terminals}.\r\n\r\netc/turtle.bnf is used to to generate a Notation3 representation of the grammar, a transformed LL1 representation and ultimately {RDF::Turtle::Meta}.\r\n\r\nUsing SWAP utilities, this is done as follows:\r\n\r\n    python http://www.w3.org/2000/10/swap/grammar/ebnf2turtle.py \\\r\n      etc/turtle.bnf \\\r\n      ttl language \\\r\n      'http://www.w3.org/ns/formats/Turtle#' > |\r\n    sed -e 's/^  \".*\"$/  g:seq (&)/'  > etc/turtle.n3\r\n      \r\n    python http://www.w3.org/2000/10/swap/cwm.py etc/turtle.n3 \\\r\n      http://www.w3.org/2000/10/swap/grammar/ebnf2bnf.n3 \\\r\n      http://www.w3.org/2000/10/swap/grammar/first_follow.n3 \\\r\n      --think --data > etc/turtle-bnf.n3\r\n    \r\n    script/gramLL1 \\\r\n      --grammar etc/turtle-ll1.n3 \\\r\n      --lang 'http://www.w3.org/ns/formats/Turtle#language' \\\r\n      --output lib/rdf/turtle/meta.rb\r\n    \r\n      \r\n## Dependencies\r\n\r\n* [Ruby](http://ruby-lang.org/) (>= 1.8.7) or (>= 1.8.1 with [Backports][])\r\n* [RDF.rb](http://rubygems.org/gems/rdf) (>= 0.3.4)\r\n\r\n## Installation\r\n\r\nThe recommended installation method is via [RubyGems](http://rubygems.org/).\r\nTo install the latest official release of the `RDF::Turtle` gem, do:\r\n\r\n    % [sudo] gem install rdf-turtle\r\n\r\n## Mailing List\r\n* <http://lists.w3.org/Archives/Public/public-rdf-ruby/>\r\n\r\n## Author\r\n* [Gregg Kellogg](http://github.com/gkellogg) - <http://greggkellogg.net/>\r\n\r\n## Contributing\r\n* Do your best to adhere to the existing coding conventions and idioms.\r\n* Don't use hard tabs, and don't leave trailing whitespace on any line.\r\n* Do document every method you add using [YARD][] annotations. Read the\r\n  [tutorial][YARD-GS] or just look at the existing code for examples.\r\n* Don't touch the `.gemspec`, `VERSION` or `AUTHORS` files. If you need to\r\n  change them, do so on your private branch only.\r\n* Do feel free to add yourself to the `CREDITS` file and the corresponding\r\n  list in the the `README`. Alphabetical order applies.\r\n* Do note that in order for us to merge any non-trivial changes (as a rule\r\n  of thumb, additions larger than about 15 lines of code), we need an\r\n  explicit [public domain dedication][PDD] on record from you.\r\n\r\n## License\r\nThis is free and unencumbered public domain software. For more information,\r\nsee <http://unlicense.org/> or the accompanying {file:UNLICENSE} file.\r\n\r\n[Ruby]:         http://ruby-lang.org/\r\n[RDF]:          http://www.w3.org/RDF/\r\n[YARD]:         http://yardoc.org/\r\n[YARD-GS]:      http://rubydoc.info/docs/yard/file/docs/GettingStarted.md\r\n[PDD]:          http://lists.w3.org/Archives/Public/public-rdf-ruby/2010May/0013.html\r\n[RDF.rb]:       http://rubydoc.info/github/ruby-rdf/rdf/master/frames\r\n[Backports]:    http://rubygems.org/gems/backports\r\n[N-Triples]:    http://www.w3.org/TR/rdf-testcases/#ntriples\r\n[Turtle]:       http://www.w3.org/TR/2012/WD-turtle-20120710/\r\n[Turtle doc]:   http://rubydoc.info/github/ruby-rdf/rdf-turtle/master/file/README.markdown\r\n[Turtle EBNF]:  http://dvcs.w3.org/hg/rdf/file/8610b8f58685/rdf-turtle/turtle.bnf"}